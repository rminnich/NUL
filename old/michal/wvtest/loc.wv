#!/usr/bin/env bash

set -e
set -o pipefail

top=$(readlink -f $(dirname $0)/../..)
wvpath=$top/michal/wvtest

. $wvpath/wvtest.sh

calc_lines() {
    # Find all source files needed to create sigma0 and vancouver
    files=$(scons --tree=all "$@" |sed -ne '/[ |]*+-/ s///p'|grep -E "(^$top|^[^/])"|grep -vE '\.(o|a|py|nulconfig|nul|debug|ld)$'|sort -u)

    # Convert relative path to absolute ones
    abs=''
    for f in $files; do
	[[ ${f#$top} = $f ]] && f=$(echo $top/*/$f)
	abs="$abs $f"
    done

    # Print all files taken into account
    echo $abs|xargs -n 1 echo|sort -u|sed -e "s,^$top/,,"

    # Count the lines
    output=$(cloc $abs)
    echo "$output"

    WVPERF files   $(echo "$output"|awk '/^SUM:/ { print $2 }')
    WVPERF blank   $(echo "$output"|awk '/^SUM:/ { print $3 }')
    WVPERF comment $(echo "$output"|awk '/^SUM:/ { print $4 }')
    WVPERF code    $(echo "$output"|awk '/^SUM:/ { print $5 }')

    parts='base/ vancouver/ build/ michal/ julian/ julian/lib/dlmalloc alexb/apps/ alexb/include/ alexb/lib/lwip/ alexb/lib/matrixssl/'
    for f in $parts; do
      part=$(echo $abs|xargs -n 1 echo|sort -u | (grep "$f" || true))
      if [ "${part+x}" = x ] && [ -z "$part" ]; then
        continue;
      fi
      echo ""
      echo "--------------------- $f"
      #echo "$part"
      part_out=$(cloc $part)
      echo "$part_out";
    done
}

cd $top/build

WVSTART "Lines of Code (sigma0 + vancouver)"
calc_lines bin/apps/sigma0.nul bin/apps/vancouver.nul

WVSTART "Lines of Code (PASSIVE setup)"
calc_lines bin/apps/sigma0.nul bin/apps/vancouver.nul bin/apps/remote_config.nul bin/apps/logdisk.nul
